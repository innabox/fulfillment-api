//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

syntax = "proto3";

package fulfillment.v1;

import "fulfillment/v1/host_class_type.proto";
import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

message HostClassesListRequest {
  // Index of the first result. If not specified the default value will be zero.
  optional int32 offset = 1;

  // Maximum number of results to be returned by the server. When not specified all the results will be returned. Note
  // that there may not be enough results to return, and that the server may decide, for performance reasons, to return
  // less results than requested.
  optional int32 limit = 2;

  // Filter criteria.
  //
  // The syntax of this parameter is similar to the syntax of the _where_ clause of a SQL statement, but using the names
  // of the attributes of the host class instead of the names of the columns of a table. For example, in order to
  // retrieve all the host classes with a title starting with `gpu` the value should be:
  //
  //     title like 'gpu%'
  //
  // If this isn't provided, or if the value is empty, then all the host classes that the user has permission to see
  // will be returned.
  optional string filter = 3;

  // Order criteria.
  //
  // The syntax of this parameter is similar to the syntax of the _order by_ clause of a SQL statement, but using the
  // names of the attributes of the host class instead of the names of the columns of a table. For example, in order to
  // sort the templates descending by title the value should be:
  //
  //     name desc
  //
  // If the parameter isn't provided, or if the value is empty, then the order of the results is undefined.
  optional string order = 4;
}

message HostClassesListResponse {
  // Actual number of items returned. Note that this may be smaller than the value requested in the `limit` parameter
  // of the request if there are not enough items, or of the system decides that returning that number of items isn't
  // feasible or convenient for performance reasons.
  optional int32 size = 3;

  // Total number of items of the collection that match the search criteria, regardless of the number of results
  // requested with the `limit` parameter.
  optional int32 total = 4;

  // List of results.
  repeated HostClass items = 5;
}

message HostClassesGetRequest {
  string id = 1;
}

message HostClassesGetResponse {
  HostClass object = 1;
}

message HostClassesCreateRequest {
  HostClass object = 1;
}

message HostClassesCreateResponse {
  HostClass object = 1;
}

message HostClassesUpdateRequest {
  HostClass object = 1;
  google.protobuf.FieldMask update_mask = 2;
}

message HostClassesUpdateResponse {
  HostClass object = 1;
}

message HostClassesDeleteRequest {
  string id = 1;
}

message HostClassesDeleteResponse {}

service HostClasses {
  // Retrieves the list of host classes.
  rpc List(HostClassesListRequest) returns (HostClassesListResponse) {
    option (google.api.http) = {get: "/api/fulfillment/v1/host_classes"};
  }

  // Retrieves the details of one specific host classes.
  rpc Get(HostClassesGetRequest) returns (HostClassesGetResponse) {
    option (google.api.http) = {
      get: "/api/fulfillment/v1/host_classes/{id}"
      response_body: "object"
    };
  }

  // Creates a new host class.
  //
  // This method isn't allowed for regular users, only for the system itself.
  rpc Create(HostClassesCreateRequest) returns (HostClassesCreateResponse) {
    option (google.api.http) = {
      post: "/api/fulfillment/v1/host_classes"
      body: "object"
      response_body: "object"
    };
  }

  // Updates an existint host class.
  //
  // This method isn't allowed for regular users, only for the system itself.
  rpc Update(HostClassesUpdateRequest) returns (HostClassesUpdateResponse) {
    option (google.api.http) = {
      patch: "/api/fulfillment/v1/host_classes/{object.id}"
      body: "object"
      response_body: "object"
    };
  }

  // Delete a host class.
  //
  // This method isn't allowed for regular users, only for the system itself.
  rpc Delete(HostClassesDeleteRequest) returns (HostClassesDeleteResponse) {
    option (google.api.http) = {delete: "/api/fulfillment/v1/host_classes/{id}"};
  }
}
