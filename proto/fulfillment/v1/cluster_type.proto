//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

syntax = "proto3";

package fulfillment.v1;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "shared/v1/condition_status_type.proto";
import "shared/v1/metadata_type.proto";

// Contains the details of the cluster.
//
// The `spec` contains the desired details, and may be modified by the user. The `status` contains the current status of
// the cluster, is provided by the system and can't be modified by the user.
message Cluster {
  // Unique identifier of the cluster.
  string id = 1;

  shared.v1.Metadata metadata = 2;
  ClusterSpec spec = 3;
  ClusterStatus status = 4;
}

// The spec contains the details of a cluster as desired by the user.
message ClusterSpec {
  // Reference to the cluster template.
  //
  // This is mandatory, and must be the value of the `id` field of one of the cluster templates.
  //
  // This can't be modified after the cluster is created.
  string template = 1;

  // Values of the template parameters.
  //
  // When using the HTTP+JSON version of the API the values must be represented as documented in the (ProtoJSON format
  // document)[https://protobuf.dev/programming-guides/json]. For example, if the template has a `number_of_gpus`
  // parameter of integer type, the complete cluster should be represented like this:
  //
  // ```json
  // {
  //   "spec": {
  //     "template_id": "123",
  //     "template_parameters": {
  //       "number_of_gpus": {
  //         "@type": "type.googleapis.com/google.protobuf.Int32Value",
  //         "value": 3
  //       }
  //     }
  //   }
  // }
  // ```
  //
  // The possible values of the `@type` are the same as those used by the `type_url` field of the `Any` type:
  //
  // | Type                           | Value                                             |
  // |--------------------------------|---------------------------------------------------|
  // | Boolean                        | `type.googleapis.com/google.protobuf.BoolValue`   |
  // | Integer number, 32 bits        | `type.googleapis.com/google.protobuf.Int32Value`  |
  // | Integer number, 64 bits        | `type.googleapis.com/google.protobuf.Int64Value`  |
  // | Floating point number, 32 bits | `type.googleapis.com/google.protobuf.FloatValue`  |
  // | Floating point number, 64 bits | `type.googleapis.com/google.protobuf.DoubleValue` |
  // | String                         | `type.googleapis.com/google.protobuf.StringValue` |
  // | Timestamp                      | `type.googleapis.com/google.protobuf.Timestamp`   |
  // | Duration                       | `type.googleapis.com/google.protobuf.Duration`    |
  // | Array of bytes                 | `type.googleapis.com/google.protobuf.BytesValue`  |
  // | Any JSON value                 | `type.googleapis.com/google.protobuf.Value`       |
  //
  // These parameters can't be modified after the cluster is created.
  map<string, google.protobuf.Any> template_parameters = 2;

  // Desired node sets of the cluster.
  //
  // This will be automatically set by the system when the cluster is initially created, according to the template
  // selected by the user, and can be later modified to change the size.
  //
  // The key of the map is the unique identifier of the node set for this cluster.
  //
  // For example, a cluster created with two different node sets, one for nodes without GPUs and another for nodes with
  // GPUs could be represented like this:
  //
  // ```json
  // {
  //   "id": "123",
  //   "spec": {
  //     "node_sets": {
  //       "compute": {
  //         "host_class": "acme_1tb",
  //         "size": 3
  //       },
  //       "gpu": {
  //         "host_class": "acme_1tb_h100",
  //         "size": 3
  //       }
  //     }
  //   },
  //   "status": {
  //     "state": "CLUSTER_STATE_READY",
  //     "node_sets": {
  //       "compute": {
  //         "host_class": "acme_1tb",
  //         "size": 3
  //       },
  //       "gpu": {
  //         "host_class": "acme_1tb_h100",
  //         "size": 3
  //       }
  //     }
  //   }
  // }
  // ```
  //
  // The user will not be allowed to change the `host_class` field.
  //
  // The user will not be allowed to remove existing node sets, or add new node sets.
  //
  // The user will be allowed to update `size` field.
  //
  // If at any time the system can't allocate the number of nodes requested by the user, because of permissions, quota,
  // availability of resources or system errors, the cluster will be marked as degraded, and the details will be in the
  // `DEGRADED` condition.
  map<string, ClusterNodeSet> node_sets = 3;
}

// The status contains the details of the cluster provided by the system.
message ClusterStatus {
  // Indicates the overall state of the cluster.
  ClusterState state = 1;

  // Contains a list of conditions that describe in detail the status of the cluster.
  //
  // For example, an cluster that is ready could be represented like this (when converted to JSON):
  //
  //    {
  //      "id": "123",
  //      "spec": {
  //      },
  //      "status": {
  //        "state": "CLUSTER_STATE_READY",
  //        "conditions": [
  //          {
  //            "type": "CLUSTER_CONDITION_TYPE_READY",
  //            "status": "CONDITION_STATUS_TRUE",
  //            "last_transition_time": "2025-03-12 20:15:59+00:00",
  //            "message": "The cluster is ready to use",
  //          },
  //          {
  //            "type": "CLUSTER_CONDITION_TYPE_FAILED",
  //            "status": "CONDITION_STATUS_FALSE",
  //            "last_transition_time": "2025-03-12 20:10:59+00:00"
  //          }
  //        ]
  //      }
  //    }
  //
  // In this example the `READY` condition is true. That tells us that the cluster is ready to use via the API URL
  // provided in the `status.api_url` field.
  //
  // The `FAILED` condition is false. That tells us that the cluster is *not* failed.
  //
  // Note that in this example, to make it shorter, only one condition appears. In general all the conditions (except
  // `UNSPECIFIED`) will appear exactly once.
  //
  // Check the documentation of the values of the `ClusterConditionType` enumerated type to see possible conditions and
  // reasons.
  repeated ClusterCondition conditions = 2;

  // URL of te API server of the cluster.
  //
  // This will be empty if the cluster isn't ready.
  string api_url = 3;

  // URL of the console of the cluster.
  //
  // This will be empty if the cluster isn't ready or the console isn't enabled.
  string console_url = 4;

  // Current node sets of the cluster.
  //
  // This is the current status of the node sets. It will be different to `spec.node_sets` when there is a change that
  // is in progress, or if the system can't apply the changes requested by the user.
  //
  // The key of the map is the unique identifier of the node set for this cluster.
  map<string, ClusterNodeSet> node_sets = 5;
}

// Represents the overall state of a cluster.
enum ClusterState {
  // Unspecified indicates that the state is unknown.
  CLUSTER_STATE_UNSPECIFIED = 0;

  // Indicates that the cluster isn't ready yet.
  CLUSTER_STATE_PROGRESSING = 1;

  // Indicates indicates that the cluster is ready.
  CLUSTER_STATE_READY = 2;

  // Indicates indicates that the cluster is unusable.
  CLUSTER_STATE_FAILED = 3;
}

// Contains the details of a condition that describes the status of a cluster.
message ClusterCondition {
  // Indicates the type of condition.
  ClusterConditionType type = 1;

  // Indicates the status of the condition.
  shared.v1.ConditionStatus status = 2;

  // This time is the last time that the condition was updated.
  google.protobuf.Timestamp last_transition_time = 3;

  // Contains a the reason of the condition in a format suitable for use by programs.
  //
  // The possible values will be documented in the object that contains the condition.
  optional string reason = 4;

  // Contains a text giving more details of the condition.
  //
  // This will usually be progress reports, or error messages, and are intended for use by humans, to debug problems.
  optional string message = 5;
}

// Types of conditions used to describe the status of cluster.
enum ClusterConditionType {
  // Unspecified indicates that the condition is unknown.
  //
  // This will never be appear in the `spec.conditions` field of a cluster.
  CLUSTER_CONDITION_TYPE_UNSPECIFIED = 0;

  // Indicates that the cluster isn't completely ready yet.
  //
  // Currently there are no `reason` values defined.
  CLUSTER_CONDITION_TYPE_PROGRESSING = 1;

  // Indicates that the cluster is ready to use.
  //
  // Currently there are no `reason` values defined.
  CLUSTER_CONDITION_TYPE_READY = 2;

  // Indicates that the cluster is unusable.
  //
  // Currently there are no `reason` values defined.
  CLUSTER_CONDITION_TYPE_FAILED = 3;

  // Indicates that the cluster is degraded.
  CLUSTER_CONDITION_TYPE_DEGRADED = 4;
}

// Defines a set of nodes that are part of the cluster, all of them of the same class of host.
message ClusterNodeSet {
  // Identifier of the class of hosts that are part of the set.
  //
  // The details of the host class can be obtained using the `List` and `Get` method of the `HostClasses` service. For
  // example, to get the details of the `acme_1tb` host class using the HTTP+JSON version of the API:
  //
  // ```http
  // GET /api/fulfillment/v1/host_classes/acme_1tb
  // ```
  //
  // Which will return something like this:
  //
  // ```json
  // {
  //   "id": "acme_1tb",
  //   "title": "ACME server with 1 TiB of RAM and no GPU",
  //   "description": "ACME server model XYZ with 1 TiB of RAM, 2 Xeon 6 CPUS and no GPU."
  // }
  // ```
  //
  // This will be set by the system when the cluster is initially created, according to the template selected by the
  // user.
  //
  // The user will not have permission to change this field.
  string host_class = 1;

  // Number of nodes of the set.
  int32 size = 2;
}
