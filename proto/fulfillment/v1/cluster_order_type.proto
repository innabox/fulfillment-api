//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

syntax = "proto3";

package fulfillment.v1;

// A cluster order contains the details that the user provides to request the provisioning of a cluster, as well as the
// current status of the order provided by the system.
message ClusterOrder {
  // Unique identifier of the order. This will be automatically generated by the system when the order is placed.
  string id = 1;

  ClusterOrderSpec spec = 2;
  ClusterOrderStatus status = 3;
}

// The spec contains the details that the user provides to request the provisioning of the cluster.
message ClusterOrderSpec {
  // Reference to the cluster template. This is mandatory, and must be the value of the `id` field of one of the cluster
  // templates.
  string template_id = 2;
}

// The status contains the current status of the order.
message ClusterOrderStatus {
  // State indicates the current state of the processing of the order.
  ClusterOrderState state = 4;

  // Reference to the resulting cluster. This will be automatically populated by the system when the requested cluster
  // is completely provisoned. Further details about the cluster, like the API URL, will be available in the
  // corresponding `Cluster` object.
  string cluster_id = 3;
}

// The cluster state indicates the overall state of the processing of the order.
enum ClusterOrderState {
  // Unspecified indicates that the value isn't set.
  CLUSTER_ORDER_STATE_UNSPECIFIED = 0;

  // Accepted indicates that the order has been accepted by the system.
  CLUSTER_ORDER_STATE_ACCEPTED = 1;

  // Rejected indicates that the order has been rejected by the system.
  CLUSTER_ORDER_STATE_REJECTED = 2;

  // Canceled indicates that the order has been canceled by the user.
  CLUSTER_ORDER_STATE_CANCELED = 3;

  // Fulfilled indicates that the order has been successfully fulfilled.
  CLUSTER_ORDER_STATE_FULFILLED = 4;

  // Failed indicates that fulfillment of the order failed.
  CLUSTER_ORDER_STATE_FAILED = 5;
}
